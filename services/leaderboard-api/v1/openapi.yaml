openapi: 3.0.0
info:
  title: Leaderboard API
  version: 1.0.0
  description: Leaderboard API to get all players' data
  # termsOfService: 'http://example.com/terms/'
  contact:
    email: support@leaderboard.app
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: https://wkwjuwml9h.execute-api.us-east-2.amazonaws.com/prod
    description: Production server
  - url: https://localhost:8080/api/v1
    description: Development server

paths:
  /leaderboard:
    get:
      tags:
        - Leaderboard
      summary: Gets all player data to display in table
      operationId: getLeaderboard
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardResponse'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Internal server error

components:
  schemas:
    Player:
      type: object
      required:
        - id
        - place
        - name
        - gamesPlayed
        - wins
        - losses
        - winRate
        - kills
        - deaths
        - assists
        - killsPerGame
        - deathsPerGame
        - assistsPerGame
        - kda
        - rank
        - rankValue
        - rankLastUpdated
        - tier
        - division
        - leaguePoints
        - currentStreak
        - isInActiveGame
      properties:
        id:
          type: string
          description: The player ID
        place:
          type: integer
          format: int32
          description: Place in leaderboard
        name:
          type: string
          description: The player's name
        discordAvatarUrl:
          type: string
          description: The player's discord avatar URL
        gamesPlayed:
          type: integer
          format: int32
          description: Number of games played
        wins:
          type: integer
          format: int32
          description: Number of wins
        losses:
          type: integer
          format: int32
          description: Number of losses
        winRate:
          type: number
          format: float
          description: Player's winning rate, calculated as wins divided by total games played.
        kills:
          type: integer
          format: int32
          description: Total kills
        deaths:
          type: integer
          format: int32
          description: Total deaths
        assists:
          type: integer
          format: int32
          description: Total assists
        killsPerGame:
          type: number
          format: float
          description: Kills per game
        deathsPerGame:
          type: number
          format: float
          description: Deaths per game
        assistsPerGame:
          type: number
          format: float
          description: Assists per game
        kda:
          type: number
          format: float
          description: KDA ratio
        rank:
          type: string
          description: Overall rank string
        rankValue:
          type: integer
          format: int32
          description: Overall rank value
        rankLastUpdated:
          type: string
          description: String representing last rank update date
        tier:
          type: string
          enum: ["", "IRON", "BRONZE", "SILVER", "GOLD", "PLATINUM", "EMERALD", "DIAMOND", "MASTER", "GRANDMASTER", "CHALLENGER"]
          description: Rank solo queue tier
        division:
          type: string
          enum: ["", "I", "II", "III", "IV"]
          description: Ranked solo queue division
        leaguePoints:
          type: integer
          format: int32
          description: Ranked solo queue league points
        currentStreak:
          type: integer
          format: int32 
          description: Current win/loss streak
        isInActiveGame:
          type: boolean
          description: Boolean representing if player is in game
        activeGameChampionId:
          type: integer
          format: int32
          description: Boolean representing if player is in game
        activeGameStartTime:
          type: integer
          format: int64
          description: Active game epoch milliseconds start time
    LeaderboardResponse:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          description: List of players
